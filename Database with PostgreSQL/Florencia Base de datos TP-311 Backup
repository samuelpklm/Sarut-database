--
-- PostgreSQL database dump
--

-- Dumped from database version 10.15
-- Dumped by pg_dump version 10.15

-- Started on 2012-11-05 08:17:22

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET SESSION AUTHORIZATION 'postgres';

DROP DATABASE "Florencia Base de datos TP-311";
--
-- TOC entry 2989 (class 1262 OID 16552)
-- Name: Florencia Base de datos TP-311; Type: DATABASE; Schema: -; Owner: postgres
--

CREATE DATABASE "Florencia Base de datos TP-311" WITH TEMPLATE = template0 ENCODING = 'UTF8' LC_COLLATE = 'Spanish_Spain.1252' LC_CTYPE = 'Spanish_Spain.1252';


\connect -reuse-previous=on "dbname='Florencia Base de datos TP-311'"

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET SESSION AUTHORIZATION DEFAULT;

--
-- TOC entry 1 (class 3079 OID 12924)
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- TOC entry 2992 (class 0 OID 0)
-- Dependencies: 1
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET SESSION AUTHORIZATION 'postgres';

--
-- TOC entry 243 (class 1255 OID 16883)
-- Name: control_cantidad_pedido(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.control_cantidad_pedido() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
cantidadArt integer;
offsetCon1 integer;
BEGIN
offsetCon1 := 0;
cantidadArt := 0;
	<<Cantidad_almacen_por_vendedor>>
loop
	if((select sum(cantidad)
	from Se_Ubica where Dni_Articulo = NEW.codigo_articulo and dni_almacen =(select dni_almacen
  		from Administra_Almacen where cedula_vendedor = (select 
   		cedula_vendedor from venta where serial_comprobante = NEW.serial_comprobante 
		)
		offset offsetCon1 limit 1)) > 0) then 
	   cantidadArt := cantidadArt + ((select sum(cantidad)
	from Se_Ubica where Dni_Articulo = NEW.codigo_articulo and dni_almacen =(select dni_almacen
  		from Administra_Almacen where cedula_vendedor = (select 
   		cedula_vendedor from venta where serial_comprobante = NEW.serial_comprobante 
		)
		offset offsetCon1 limit 1)));
		offsetCon1 := offsetCon1 + 1;
	else 
		exit Cantidad_almacen_por_vendedor;
	end if;
end loop Cantidad_almacen_por_vendedor;
insert into probar2(resultado_cantidad,resultado_offset) values (cantidadArt,offsetCon1);
if(NEW.catidad_del_articulo > cantidadArt)
then 
	RAISE NOTICE 'Cantidad del articulo pedido\n
				supera las cantidad disponible en almacen';
	NEW.catidad_del_articulo := 0;
	DELETE from pedido where catidad_del_articulo = 0;
ELSIF ((select sum(catidad_del_articulo) 
		from pedido where (codigo_articulo = NEW.codigo_articulo 
		and serial_Comprobante = NEW.serial_Comprobante)) > cantidadArt) then
		NEW.catidad_del_articulo := 0;
	RAISE NOTICE 'Las cantidades de articulos pedidos excede la capacidad de los almacenes';
END IF;
--insert into probar(resultado) values (cantidadArt);
RETURN NEW;
END $$;


--
-- TOC entry 240 (class 1255 OID 17049)
-- Name: eliminar_pedido(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.eliminar_pedido() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
	DELETE from pedido where catidad_del_articulo = 0;
RETURN NULL;
END $$;


--
-- TOC entry 226 (class 1255 OID 16785)
-- Name: establecer_precio_pedido(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.establecer_precio_pedido() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
NEW.precio_del_Pedido := NEW.catidad_del_articulo * (select precio_de_Venta from Articulo 
										where Codigo = NEW.codigo_articulo)*
										(1-(select descuento from Articulo 
										where Codigo = NEW.codigo_articulo)/100);
RETURN NEW;
END $$;


--
-- TOC entry 242 (class 1255 OID 17164)
-- Name: insert_seguridad_pedido(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.insert_seguridad_pedido() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
if(current_role = clientes) then
	if(new.serial_comprobante = null) then 
		new.serial_comprobante = (select serial_comprobante from venta where 
								  cedula = current_user and estado = false);
		exit insert_seguridad_pedido;
	end if;
	if(new.serial_comprobante = null) then 
		raise notice 'Cliente no ha aperturado una venta, no puede hacer pedido';
		delete from pedido where serial_comprobante = null;
		exit insert_seguridad_pedido;
	end if;
	if(new.cedula = null) then
		new.cedula = cast(current_user as integer);
	end if;
end if;
RETURN NEW;
END $$;


--
-- TOC entry 244 (class 1255 OID 17160)
-- Name: insert_seguridad_venta(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.insert_seguridad_venta() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
if(new.cedula_cliente = null) then
	if(current_role = clientes) then
		raise notice 'Comprobacion automatica de cedula cliente';
		new.cedula_cliente = cast(current_user as integer);
		exit insert_seguridad_venta;
	elsif(current_user = postgres) then 
		delete from venta where cedula_cliente = null;
		exit insert_seguridad_venta;
	end if;
end if;
if(new.cedula_vendedor = null) then
	new.cedula_vendedor = (select cedula from vendedor limit 1);
	if(new.cedula_vededor = null) then 
		delete from venta where cedula_vendedor = null;
		exit insert_seguridad_venta;
	end if;
end if;
if(new.serial_comprobante = null) then
	new.serial_comprobante = 100000000000 + new.cedula_cliente + 
	(select count(*) from venta where cedula_cliente
	= current_user and estado = true);
end if;
if(new.numero_bancario = null) then
	new.numero_bancario = (select Numero_Bancario from cuenta 
						   where cedula = new.cedula);
	if(new.numero_bancario = null) then 
		raise notice 'El cliente no posee cuenta bancaria, no puede realiza compras';
		delete from venta where numero_bancario = null;
		exit insert_seguridad_venta;
	end if;
end if;
if((select count(*) from venta where cedula_cliente
	= current_user and estado = false) > 1) then 
	raise notice 'No se puede realizar dos compras al mismo tiempo, 
	se elimnarÃ¡ la ultima';
	delete from venta where serial_comprobante = new.serial_comprobante;
end if;
RETURN NEW;
END $$;


--
-- TOC entry 241 (class 1255 OID 17162)
-- Name: update_seguridad_venta(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_seguridad_venta() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
if(current_role = clientes) then
	update venta set estado = false where total_monto = null; 
		
end if;

RETURN NEW;
END $$;


--
-- TOC entry 239 (class 1255 OID 17021)
-- Name: verificar_monto(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.verificar_monto() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE 
offsetCon1 integer;
borrar integer;
offsetCon2 integer;
CantidadPer integer;
BEGIN
CantidadPer := (select catidad_del_articulo
	from pedido where serial_Comprobante = NEW.serial_Comprobante limit 1);
offsetCon1 := 0;
offsetCon2 := 0;
if(NEW.estado = TRUE) THEN 
	NEW.total_Monto := (select sum(precio_del_Pedido) 
	from pedido where serial_Comprobante = NEW.serial_Comprobante);
END IF;
if(NEW.total_Monto = 0) THEN
	NEW.estado := FALSE;
	RAISE NOTICE 'El cliente debe realizar pedidos, para poder realizar la Venta';
ELSIF (NEW.total_Monto > (select monto from Cuenta where Numero_Bancario = NEW.numero_Bancario))
	THEN 
	RAISE NOTICE 'Monto insuficiente para realizar la venta';
	NEW.estado := FALSE;
ELSE
	UPDATE Cuenta SET monto = monto - NEW.total_Monto 
	WHERE Numero_Bancario = NEW.numero_Bancario;
 <<establecer>>
 LOOP
 	IF((select catidad_del_articulo from pedido offset offsetCon1 limit 1) > 0) then
	if(offsetCon2 = 0) then
		CantidadPer := (select catidad_del_articulo from pedido offset offsetCon1 limit 1);
	END IF; 
			if ((select cantidad from se_ubica where 
				Dni_Articulo = 
				 (select codigo_articulo from pedido offset offsetCon1 limit 1) 
				 and cantidad >0 and dni_almacen = (select dni_almacen
  		from Administra_Almacen where cedula_vendedor = (select 
   		cedula_vendedor from venta where serial_comprobante = NEW.serial_comprobante 
		)
		offset offsetCon2 limit 1))>0 ) 	 then
				 
		borrar:=	(select dni_almacen from se_ubica where 	Dni_Articulo = 
				 (select codigo_articulo from pedido offset offsetCon1 limit 1) 
				 and cantidad >0 and dni_almacen = (select dni_almacen
  		from Administra_Almacen where cedula_vendedor = (select 
   		cedula_vendedor from venta where serial_comprobante = NEW.serial_comprobante 
		)
		offset offsetCon2 limit 1));
				 
				if((select cantidad from se_ubica where 
				Dni_Articulo = (select codigo_articulo from pedido offset offsetCon1 limit 1) 
					and dni_almacen = borrar)
				   < CantidadPer) then 
				   CantidadPer := CantidadPer - (select cantidad from se_ubica where 
				Dni_Articulo = (select codigo_articulo from pedido offset offsetCon1 limit 1) 
					and dni_almacen = borrar);
				UPDATE se_ubica set cantidad = 0 where (Dni_Articulo = 
					(select codigo_articulo from pedido offset offsetCon1 limit 1)
					 AND Dni_Almacen = borrar);
					offsetCon2 := offsetCon2 + 1;
				ELSE 
				UPDATE se_ubica set cantidad = cantidad - CantidadPer where (Dni_Articulo = 
					(select codigo_articulo from pedido offset offsetCon1 limit 1)
					  AND Dni_Almacen = borrar);																			 
					offsetCon1 := offsetCon1 + 1;
					offsetCon2 :=0;
			--	EXIT establecer;
				end if;	
			ELSE 
		--		update se_ubica set cantidad = offsetCon2;
				offsetCon2 := 0;
				offsetCon1 := offsetCon1 + 1;
				RAISE NOTICE 'Esta es el problema';
			end if;
	ELSE
		EXIT establecer;			 
	end if;
end loop establecer;
END IF;
RETURN NEW;
END $$;


SET default_tablespace = '';

SET default_with_oids = false;

--
-- TOC entry 201 (class 1259 OID 16681)
-- Name: administra_almacen; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.administra_almacen (
    dni_almacen integer NOT NULL,
    cedula_vendedor integer NOT NULL
);


--
-- TOC entry 200 (class 1259 OID 16679)
-- Name: administra_almacen_dni_almacen_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.administra_almacen_dni_almacen_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 2994 (class 0 OID 0)
-- Dependencies: 200
-- Name: administra_almacen_dni_almacen_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.administra_almacen_dni_almacen_seq OWNED BY public.administra_almacen.dni_almacen;


--
-- TOC entry 199 (class 1259 OID 16672)
-- Name: almacen; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.almacen (
    dni integer NOT NULL,
    estado character varying(12) NOT NULL,
    municipio character varying(20) NOT NULL,
    CONSTRAINT almacen_estado_check CHECK ((((estado)::text = 'Aragua'::text) OR ((estado)::text = 'miranda'::text) OR ((estado)::text = 'Bolivar'::text) OR ((estado)::text = 'merida'::text) OR ((estado)::text = 'trujillo'::text) OR ((estado)::text = 'portuguesa'::text) OR ((estado)::text = 'monagas'::text) OR ((estado)::text = 'zulia'::text) OR ((estado)::text = 'distrito Capital'::text)))
);


--
-- TOC entry 198 (class 1259 OID 16670)
-- Name: almacen_dni_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.almacen_dni_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 2996 (class 0 OID 0)
-- Dependencies: 198
-- Name: almacen_dni_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.almacen_dni_seq OWNED BY public.almacen.dni;


--
-- TOC entry 202 (class 1259 OID 16863)
-- Name: articulo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.articulo (
    codigo numeric(7,0) NOT NULL,
    precio_de_venta numeric(12,2) NOT NULL,
    descuento numeric(12,2) NOT NULL,
    descripcion text,
    nombre character varying(20),
    CONSTRAINT articulo_codigo_check CHECK (((codigo >= (1000000)::numeric) AND (codigo <= (9999999)::numeric)))
);


--
-- TOC entry 204 (class 1259 OID 16875)
-- Name: se_ubica; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.se_ubica (
    dni_almacen integer NOT NULL,
    dni_articulo numeric(7,0) NOT NULL,
    cantidad integer NOT NULL,
    CONSTRAINT se_ubica_cantidad_check CHECK ((cantidad >= 0))
);


SET SESSION AUTHORIZATION 'vendedores';

--
-- TOC entry 222 (class 1259 OID 17191)
-- Name: articulo_almacen; Type: VIEW; Schema: public; Owner: vendedores
--

CREATE VIEW public.articulo_almacen AS
 SELECT seub.dni_almacen,
    art.nombre,
    art.descripcion,
    art.precio_de_venta,
    seub.cantidad,
    a1.estado,
    a1.municipio
   FROM public.articulo art,
    public.se_ubica seub,
    public.almacen a1,
    public.administra_almacen aa1
  WHERE ((art.codigo = seub.dni_articulo) AND (seub.dni_almacen = a1.dni) AND (a1.dni = aa1.dni_almacen) AND (aa1.cedula_vendedor = (CURRENT_USER)::integer));


SET SESSION AUTHORIZATION 'postgres';

--
-- TOC entry 215 (class 1259 OID 17096)
-- Name: articulos_disponibles; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.articulos_disponibles AS
 SELECT articulo.codigo,
    articulo.precio_de_venta,
    articulo.descuento,
    articulo.descripcion,
    articulo.nombre
   FROM public.articulo;


--
-- TOC entry 196 (class 1259 OID 16573)
-- Name: cliente; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cliente (
    cedula integer NOT NULL,
    nombre character varying(10) NOT NULL,
    nombre2 character varying(10) NOT NULL,
    apellido1 character varying(15) NOT NULL,
    apellido2 character varying(15) NOT NULL,
    sexo character(1),
    direccion character varying(50),
    email character varying(30) NOT NULL,
    CONSTRAINT cliente_cedula_check CHECK (((cedula > 5000000) AND (cedula < 50000000)))
);


--
-- TOC entry 217 (class 1259 OID 17128)
-- Name: venta; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.venta (
    serial_comprobante numeric(12,0) NOT NULL,
    cedula_vendedor integer NOT NULL,
    cedula_cliente integer,
    estado boolean DEFAULT false,
    impuesto integer DEFAULT 16,
    fecha timestamp without time zone DEFAULT now(),
    total_monto numeric(12,2) DEFAULT 0,
    numero_bancario numeric(20,0),
    CONSTRAINT venta_cedula_cliente_check CHECK (((cedula_cliente > 5000000) AND (cedula_cliente < 50000000))),
    CONSTRAINT venta_cedula_vendedor_check CHECK (((cedula_vendedor > 5000000) AND (cedula_vendedor < 50000000)))
);


--
-- TOC entry 218 (class 1259 OID 17154)
-- Name: compra; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.compra AS
 SELECT venta.cedula_vendedor AS serial_factura,
    venta.cedula_cliente,
    venta.estado,
    venta.fecha,
    venta.impuesto,
    venta.total_monto,
    venta.serial_comprobante
   FROM public.venta
  WHERE (venta.cedula_cliente = (( SELECT USER AS "user"))::integer);


--
-- TOC entry 220 (class 1259 OID 17175)
-- Name: cuales_almacenes_administro; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.cuales_almacenes_administro AS
 SELECT administra_almacen.dni_almacen,
    administra_almacen.cedula_vendedor
   FROM public.administra_almacen
  WHERE (administra_almacen.cedula_vendedor = (CURRENT_USER)::integer);


--
-- TOC entry 197 (class 1259 OID 16628)
-- Name: cuenta; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cuenta (
    numero_bancario numeric(20,0) NOT NULL,
    cedula integer NOT NULL,
    monto numeric(12,2),
    CONSTRAINT cuenta_numero_bancario_check CHECK (((numero_bancario >= '10000000000000000000'::numeric) AND (numero_bancario <= '99999999999999999999'::numeric)))
);


--
-- TOC entry 213 (class 1259 OID 17088)
-- Name: datos_personales; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.datos_personales AS
 SELECT cliente.cedula,
    cliente.nombre,
    cliente.nombre2,
    cliente.apellido1,
    cliente.apellido2,
    cliente.sexo,
    cliente.direccion,
    cliente.email
   FROM public.cliente
  WHERE (cliente.cedula = (( SELECT CURRENT_USER AS "current_user"))::integer);


--
-- TOC entry 214 (class 1259 OID 17092)
-- Name: mi_cuenta; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.mi_cuenta AS
 SELECT cuenta.numero_bancario,
    cuenta.cedula,
    cuenta.monto
   FROM public.cuenta
  WHERE (cuenta.cedula = (( SELECT USER AS "user"))::integer);


--
-- TOC entry 221 (class 1259 OID 17183)
-- Name: mis_almacenes; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.mis_almacenes AS
 SELECT a1.dni,
    a1.estado,
    a1.municipio
   FROM public.almacen a1,
    public.administra_almacen aa1
  WHERE ((a1.dni = aa1.dni_almacen) AND (aa1.cedula_vendedor = (CURRENT_USER)::integer));


--
-- TOC entry 224 (class 1259 OID 17199)
-- Name: mis_clientes; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.mis_clientes AS
 SELECT cli.cedula,
    cli.nombre,
    cli.nombre2,
    cli.apellido1,
    cli.apellido2,
    cli.sexo,
    cli.direccion,
    cli.email,
    vent.serial_comprobante,
    vent.cedula_vendedor,
    vent.cedula_cliente,
    vent.estado,
    vent.impuesto,
    vent.fecha,
    vent.total_monto,
    vent.numero_bancario
   FROM public.cliente cli,
    public.venta vent
  WHERE ((cli.cedula = vent.cedula_cliente) AND (vent.cedula_vendedor = (CURRENT_USER)::integer));


--
-- TOC entry 207 (class 1259 OID 17042)
-- Name: vendedor; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.vendedor (
    cedula numeric(10,0) NOT NULL,
    nombre character varying(10) NOT NULL,
    nombre2 character varying(10) NOT NULL,
    apellido1 character varying(15) NOT NULL,
    apellido2 character varying(15) NOT NULL,
    telefono numeric(12,0),
    email character varying(30) NOT NULL,
    CONSTRAINT vendedor_cedula_check CHECK (((cedula > (5000000)::numeric) AND (cedula < (50000000)::numeric)))
);


--
-- TOC entry 219 (class 1259 OID 17167)
-- Name: mis_datos_vendedor; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.mis_datos_vendedor AS
 SELECT vendedor.cedula,
    vendedor.nombre,
    vendedor.nombre2,
    vendedor.apellido1,
    vendedor.apellido2,
    vendedor.telefono,
    vendedor.email
   FROM public.vendedor
  WHERE (vendedor.cedula = ((CURRENT_USER)::integer)::numeric);


--
-- TOC entry 206 (class 1259 OID 16999)
-- Name: pedido; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.pedido (
    dni integer NOT NULL,
    serial_comprobante numeric(12,0),
    precio_del_pedido numeric(12,2),
    cedula integer NOT NULL,
    codigo_articulo numeric(7,0) NOT NULL,
    catidad_del_articulo integer NOT NULL
);


--
-- TOC entry 216 (class 1259 OID 17100)
-- Name: mis_pedidos; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.mis_pedidos AS
 SELECT p1.cedula AS serial_factura,
    a1.nombre,
    p1.catidad_del_articulo,
    p1.codigo_articulo,
    p1.precio_del_pedido,
    p1.serial_comprobante
   FROM public.pedido p1,
    public.articulo a1
  WHERE ((p1.cedula = (( SELECT CURRENT_USER AS "current_user"))::integer) AND ((a1.nombre)::text = (( SELECT articulo.nombre
           FROM public.articulo
          WHERE (articulo.codigo = p1.codigo_articulo)))::text));


--
-- TOC entry 225 (class 1259 OID 17203)
-- Name: mis_ventas; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.mis_ventas AS
 SELECT vent.serial_comprobante,
    vent.cedula_vendedor,
    vent.cedula_cliente,
    vent.estado,
    vent.impuesto,
    vent.fecha,
    vent.total_monto,
    vent.numero_bancario
   FROM public.venta vent
  WHERE (vent.cedula_vendedor = (CURRENT_USER)::integer);


--
-- TOC entry 223 (class 1259 OID 17195)
-- Name: pedido_atencion; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.pedido_atencion AS
 SELECT ped.dni,
    ped.cedula,
    art.nombre,
    ped.codigo_articulo,
    ped.catidad_del_articulo,
    ped.precio_del_pedido,
    ped.serial_comprobante
   FROM public.pedido ped,
    public.articulo art,
    public.venta vent
  WHERE ((art.codigo = ped.codigo_articulo) AND (ped.cedula = vent.cedula_cliente) AND (ped.serial_comprobante = vent.serial_comprobante) AND (vent.cedula_vendedor = (CURRENT_USER)::integer));


--
-- TOC entry 205 (class 1259 OID 16997)
-- Name: pedido_dni_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.pedido_dni_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3016 (class 0 OID 0)
-- Dependencies: 205
-- Name: pedido_dni_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.pedido_dni_seq OWNED BY public.pedido.dni;


--
-- TOC entry 208 (class 1259 OID 17056)
-- Name: probar; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.probar (
    resultado integer
);


--
-- TOC entry 210 (class 1259 OID 17061)
-- Name: probar1; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.probar1 (
    dni integer NOT NULL,
    resultado integer
);


--
-- TOC entry 209 (class 1259 OID 17059)
-- Name: probar1_dni_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.probar1_dni_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3017 (class 0 OID 0)
-- Dependencies: 209
-- Name: probar1_dni_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.probar1_dni_seq OWNED BY public.probar1.dni;


--
-- TOC entry 212 (class 1259 OID 17069)
-- Name: probar2; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.probar2 (
    dni integer NOT NULL,
    resultado_cantidad integer,
    resultado_offset integer
);


--
-- TOC entry 211 (class 1259 OID 17067)
-- Name: probar2_dni_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.probar2_dni_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3018 (class 0 OID 0)
-- Dependencies: 211
-- Name: probar2_dni_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.probar2_dni_seq OWNED BY public.probar2.dni;


--
-- TOC entry 203 (class 1259 OID 16873)
-- Name: se_ubica_dni_almacen_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.se_ubica_dni_almacen_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3019 (class 0 OID 0)
-- Dependencies: 203
-- Name: se_ubica_dni_almacen_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.se_ubica_dni_almacen_seq OWNED BY public.se_ubica.dni_almacen;


--
-- TOC entry 2784 (class 2604 OID 16684)
-- Name: administra_almacen dni_almacen; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.administra_almacen ALTER COLUMN dni_almacen SET DEFAULT nextval('public.administra_almacen_dni_almacen_seq'::regclass);


--
-- TOC entry 2782 (class 2604 OID 16675)
-- Name: almacen dni; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.almacen ALTER COLUMN dni SET DEFAULT nextval('public.almacen_dni_seq'::regclass);


--
-- TOC entry 2788 (class 2604 OID 17002)
-- Name: pedido dni; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pedido ALTER COLUMN dni SET DEFAULT nextval('public.pedido_dni_seq'::regclass);


--
-- TOC entry 2790 (class 2604 OID 17064)
-- Name: probar1 dni; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.probar1 ALTER COLUMN dni SET DEFAULT nextval('public.probar1_dni_seq'::regclass);


--
-- TOC entry 2791 (class 2604 OID 17072)
-- Name: probar2 dni; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.probar2 ALTER COLUMN dni SET DEFAULT nextval('public.probar2_dni_seq'::regclass);


--
-- TOC entry 2786 (class 2604 OID 16878)
-- Name: se_ubica dni_almacen; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.se_ubica ALTER COLUMN dni_almacen SET DEFAULT nextval('public.se_ubica_dni_almacen_seq'::regclass);


--
-- TOC entry 2971 (class 0 OID 16681)
-- Dependencies: 201
-- Data for Name: administra_almacen; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.administra_almacen (dni_almacen, cedula_vendedor) VALUES (1, 12325642);
INSERT INTO public.administra_almacen (dni_almacen, cedula_vendedor) VALUES (7, 12325642);


--
-- TOC entry 2969 (class 0 OID 16672)
-- Dependencies: 199
-- Data for Name: almacen; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.almacen (dni, estado, municipio) VALUES (7, 'Aragua', 'Santo michelena');
INSERT INTO public.almacen (dni, estado, municipio) VALUES (1, 'Aragua', 'Santo michelena');
INSERT INTO public.almacen (dni, estado, municipio) VALUES (2, 'Aragua', 'Santo michelena');


--
-- TOC entry 2972 (class 0 OID 16863)
-- Dependencies: 202
-- Data for Name: articulo; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.articulo (codigo, precio_de_venta, descuento, descripcion, nombre) VALUES (1234567, 10.00, 10.00, 'Flor blanca', 'Hortencia');
INSERT INTO public.articulo (codigo, precio_de_venta, descuento, descripcion, nombre) VALUES (7654321, 20.50, 5.00, 'fLOR Rofas', 'Rosa');
INSERT INTO public.articulo (codigo, precio_de_venta, descuento, descripcion, nombre) VALUES (1324354, 30.00, 70.00, 'Flor cara', 'Carmesi');


--
-- TOC entry 2966 (class 0 OID 16573)
-- Dependencies: 196
-- Data for Name: cliente; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.cliente (cedula, nombre, nombre2, apellido1, apellido2, sexo, direccion, email) VALUES (27240851, 'sam', 'pamo', 'Rodriguez', 'Figueroa', 'H', 'Edo Aragua, municipio Santos Michelena', 'alfredr76@gmail.com');
INSERT INTO public.cliente (cedula, nombre, nombre2, apellido1, apellido2, sexo, direccion, email) VALUES (13875332, 'Rut', 'Norberta', 'Rodriguez', 'Figueroa', 'M', 'Edo Miranda, altos de pipe', 'noriberisuru@gmail.com');
INSERT INTO public.cliente (cedula, nombre, nombre2, apellido1, apellido2, sexo, direccion, email) VALUES (13875342, 'Rut', 'Norberta', 'Rodriguez', 'Figueroa', 'M', 'Edo Miranda, altos de pipe', 'noriberisuru@gmail.com');
INSERT INTO public.cliente (cedula, nombre, nombre2, apellido1, apellido2, sexo, direccion, email) VALUES (30333214, 'yaner', 'mercedes', 'Rodriguez', 'Figueroa', 'H', 'Edo Aragua, municipio Santos Michelena', 'mercedes@gmail.com');


--
-- TOC entry 2967 (class 0 OID 16628)
-- Dependencies: 197
-- Data for Name: cuenta; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.cuenta (numero_bancario, cedula, monto) VALUES (12345673474628589123, 27240851, 1109.00);


--
-- TOC entry 2976 (class 0 OID 16999)
-- Dependencies: 206
-- Data for Name: pedido; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.pedido (dni, serial_comprobante, precio_del_pedido, cedula, codigo_articulo, catidad_del_articulo) VALUES (84, 123456789325, 891.00, 27240851, 1234567, 99);


--
-- TOC entry 2978 (class 0 OID 17056)
-- Dependencies: 208
-- Data for Name: probar; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.probar (resultado) VALUES (NULL);
INSERT INTO public.probar (resultado) VALUES (NULL);
INSERT INTO public.probar (resultado) VALUES (NULL);
INSERT INTO public.probar (resultado) VALUES (NULL);


--
-- TOC entry 2980 (class 0 OID 17061)
-- Dependencies: 210
-- Data for Name: probar1; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.probar1 (dni, resultado) VALUES (1, NULL);
INSERT INTO public.probar1 (dni, resultado) VALUES (2, NULL);
INSERT INTO public.probar1 (dni, resultado) VALUES (3, NULL);
INSERT INTO public.probar1 (dni, resultado) VALUES (4, NULL);
INSERT INTO public.probar1 (dni, resultado) VALUES (5, 50);
INSERT INTO public.probar1 (dni, resultado) VALUES (6, NULL);
INSERT INTO public.probar1 (dni, resultado) VALUES (7, 50);
INSERT INTO public.probar1 (dni, resultado) VALUES (8, 50);
INSERT INTO public.probar1 (dni, resultado) VALUES (9, 50);
INSERT INTO public.probar1 (dni, resultado) VALUES (10, 50);
INSERT INTO public.probar1 (dni, resultado) VALUES (11, 50);
INSERT INTO public.probar1 (dni, resultado) VALUES (12, 50);
INSERT INTO public.probar1 (dni, resultado) VALUES (13, 205);
INSERT INTO public.probar1 (dni, resultado) VALUES (14, 50);
INSERT INTO public.probar1 (dni, resultado) VALUES (15, 50);
INSERT INTO public.probar1 (dni, resultado) VALUES (16, 50);


--
-- TOC entry 2982 (class 0 OID 17069)
-- Dependencies: 212
-- Data for Name: probar2; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.probar2 (dni, resultado_cantidad, resultado_offset) VALUES (1, 50, 1);
INSERT INTO public.probar2 (dni, resultado_cantidad, resultado_offset) VALUES (2, 100, 2);
INSERT INTO public.probar2 (dni, resultado_cantidad, resultado_offset) VALUES (3, 100, 2);


--
-- TOC entry 2974 (class 0 OID 16875)
-- Dependencies: 204
-- Data for Name: se_ubica; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.se_ubica (dni_almacen, dni_articulo, cantidad) VALUES (2, 1234567, 50);
INSERT INTO public.se_ubica (dni_almacen, dni_articulo, cantidad) VALUES (1, 1234567, 0);
INSERT INTO public.se_ubica (dni_almacen, dni_articulo, cantidad) VALUES (7, 1234567, 1);


--
-- TOC entry 2977 (class 0 OID 17042)
-- Dependencies: 207
-- Data for Name: vendedor; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.vendedor (cedula, nombre, nombre2, apellido1, apellido2, telefono, email) VALUES (12325642, 'Alfred', 'campeon', 'rodriz', 'gafhjs', 4241253526, 'Same@gmail.com');


--
-- TOC entry 2983 (class 0 OID 17128)
-- Dependencies: 217
-- Data for Name: venta; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- TOC entry 3020 (class 0 OID 0)
-- Dependencies: 200
-- Name: administra_almacen_dni_almacen_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.administra_almacen_dni_almacen_seq', 1, false);


--
-- TOC entry 3021 (class 0 OID 0)
-- Dependencies: 198
-- Name: almacen_dni_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.almacen_dni_seq', 2, true);


--
-- TOC entry 3022 (class 0 OID 0)
-- Dependencies: 205
-- Name: pedido_dni_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.pedido_dni_seq', 84, true);


--
-- TOC entry 3023 (class 0 OID 0)
-- Dependencies: 209
-- Name: probar1_dni_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.probar1_dni_seq', 16, true);


--
-- TOC entry 3024 (class 0 OID 0)
-- Dependencies: 211
-- Name: probar2_dni_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.probar2_dni_seq', 3, true);


--
-- TOC entry 3025 (class 0 OID 0)
-- Dependencies: 203
-- Name: se_ubica_dni_almacen_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.se_ubica_dni_almacen_seq', 1, true);


--
-- TOC entry 2805 (class 2606 OID 16678)
-- Name: almacen almacen_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.almacen
    ADD CONSTRAINT almacen_pkey PRIMARY KEY (dni);


--
-- TOC entry 2807 (class 2606 OID 16871)
-- Name: articulo articulo_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.articulo
    ADD CONSTRAINT articulo_pkey PRIMARY KEY (codigo);


--
-- TOC entry 2799 (class 2606 OID 16578)
-- Name: cliente cliente_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cliente
    ADD CONSTRAINT cliente_pkey PRIMARY KEY (cedula);


--
-- TOC entry 2801 (class 2606 OID 16633)
-- Name: cuenta cuenta_cedula_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cuenta
    ADD CONSTRAINT cuenta_cedula_key UNIQUE (cedula);


--
-- TOC entry 2803 (class 2606 OID 16945)
-- Name: cuenta cuenta_llave_principal; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cuenta
    ADD CONSTRAINT cuenta_llave_principal PRIMARY KEY (numero_bancario);


--
-- TOC entry 2811 (class 2606 OID 17004)
-- Name: pedido pedido_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pedido
    ADD CONSTRAINT pedido_pkey PRIMARY KEY (dni);


--
-- TOC entry 2815 (class 2606 OID 17066)
-- Name: probar1 probar1_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.probar1
    ADD CONSTRAINT probar1_pkey PRIMARY KEY (dni);


--
-- TOC entry 2817 (class 2606 OID 17074)
-- Name: probar2 probar2_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.probar2
    ADD CONSTRAINT probar2_pkey PRIMARY KEY (dni);


--
-- TOC entry 2809 (class 2606 OID 16881)
-- Name: se_ubica se_ubica_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.se_ubica
    ADD CONSTRAINT se_ubica_pkey PRIMARY KEY (dni_almacen, dni_articulo);


--
-- TOC entry 2813 (class 2606 OID 17047)
-- Name: vendedor vendedor_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.vendedor
    ADD CONSTRAINT vendedor_pkey PRIMARY KEY (cedula);


--
-- TOC entry 2819 (class 2606 OID 17138)
-- Name: venta venta_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.venta
    ADD CONSTRAINT venta_pkey PRIMARY KEY (serial_comprobante);


--
-- TOC entry 2829 (class 2620 OID 17053)
-- Name: pedido eliminar_pedidos; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER eliminar_pedidos AFTER INSERT ON public.pedido FOR EACH ROW EXECUTE PROCEDURE public.eliminar_pedido();


--
-- TOC entry 2827 (class 2620 OID 17048)
-- Name: pedido para_control_cantidad_pedido; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER para_control_cantidad_pedido BEFORE INSERT ON public.pedido FOR EACH ROW EXECUTE PROCEDURE public.control_cantidad_pedido();


--
-- TOC entry 2830 (class 2620 OID 17165)
-- Name: pedido trigger_insert_seguridad_pedido; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trigger_insert_seguridad_pedido AFTER INSERT ON public.pedido FOR EACH ROW EXECUTE PROCEDURE public.insert_seguridad_pedido();


--
-- TOC entry 2832 (class 2620 OID 17161)
-- Name: venta trigger_insert_seguridad_venta; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trigger_insert_seguridad_venta AFTER INSERT ON public.venta FOR EACH ROW EXECUTE PROCEDURE public.insert_seguridad_venta();


--
-- TOC entry 2828 (class 2620 OID 17052)
-- Name: pedido trigger_para_establecer_precio_venta; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trigger_para_establecer_precio_venta BEFORE INSERT ON public.pedido FOR EACH ROW EXECUTE PROCEDURE public.establecer_precio_pedido();


--
-- TOC entry 2831 (class 2620 OID 17158)
-- Name: venta verificar_monto; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER verificar_monto BEFORE INSERT OR UPDATE ON public.venta FOR EACH ROW EXECUTE PROCEDURE public.verificar_monto();


--
-- TOC entry 2821 (class 2606 OID 16685)
-- Name: administra_almacen administra_almacen_dni_almacen_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.administra_almacen
    ADD CONSTRAINT administra_almacen_dni_almacen_fkey FOREIGN KEY (dni_almacen) REFERENCES public.almacen(dni) ON DELETE CASCADE;


--
-- TOC entry 2820 (class 2606 OID 16634)
-- Name: cuenta cuenta_cedula_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cuenta
    ADD CONSTRAINT cuenta_cedula_fkey FOREIGN KEY (cedula) REFERENCES public.cliente(cedula) ON DELETE CASCADE;


--
-- TOC entry 2823 (class 2606 OID 17015)
-- Name: pedido pedido_cedula_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pedido
    ADD CONSTRAINT pedido_cedula_fkey FOREIGN KEY (cedula) REFERENCES public.cliente(cedula);


--
-- TOC entry 2822 (class 2606 OID 17010)
-- Name: pedido pedido_codigo_articulo_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pedido
    ADD CONSTRAINT pedido_codigo_articulo_fkey FOREIGN KEY (codigo_articulo) REFERENCES public.articulo(codigo) ON DELETE CASCADE;


--
-- TOC entry 2825 (class 2606 OID 17144)
-- Name: venta venta_cedula_cliente_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.venta
    ADD CONSTRAINT venta_cedula_cliente_fkey FOREIGN KEY (cedula_cliente) REFERENCES public.cliente(cedula);


--
-- TOC entry 2826 (class 2606 OID 17149)
-- Name: venta venta_cedula_vendedor_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.venta
    ADD CONSTRAINT venta_cedula_vendedor_fkey FOREIGN KEY (cedula_vendedor) REFERENCES public.vendedor(cedula);


--
-- TOC entry 2824 (class 2606 OID 17139)
-- Name: venta venta_numero_bancario_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.venta
    ADD CONSTRAINT venta_numero_bancario_fkey FOREIGN KEY (numero_bancario) REFERENCES public.cuenta(numero_bancario);


--
-- TOC entry 2991 (class 0 OID 0)
-- Dependencies: 6
-- Name: SCHEMA public; Type: ACL; Schema: -; Owner: postgres
--

GRANT ALL ON SCHEMA public TO PUBLIC;


SET SESSION AUTHORIZATION 'postgres';

--
-- TOC entry 2993 (class 0 OID 0)
-- Dependencies: 201
-- Name: TABLE administra_almacen; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT,INSERT,UPDATE ON TABLE public.administra_almacen TO almacenista;


SET SESSION AUTHORIZATION 'postgres';

--
-- TOC entry 2995 (class 0 OID 0)
-- Dependencies: 199
-- Name: TABLE almacen; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.almacen TO almacenista;


SET SESSION AUTHORIZATION 'postgres';

--
-- TOC entry 2997 (class 0 OID 0)
-- Dependencies: 202
-- Name: TABLE articulo; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT,INSERT ON TABLE public.articulo TO almacenista;


SET SESSION AUTHORIZATION 'postgres';

--
-- TOC entry 2998 (class 0 OID 0)
-- Dependencies: 204
-- Name: TABLE se_ubica; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT,INSERT ON TABLE public.se_ubica TO almacenista;


SET SESSION AUTHORIZATION 'postgres';

--
-- TOC entry 2999 (class 0 OID 0)
-- Dependencies: 215
-- Name: TABLE articulos_disponibles; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.articulos_disponibles TO clientes;


SET SESSION AUTHORIZATION 'postgres';

--
-- TOC entry 3000 (class 0 OID 0)
-- Dependencies: 217
-- Name: TABLE venta; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.venta TO contador;


SET SESSION AUTHORIZATION 'postgres';

--
-- TOC entry 3001 (class 0 OID 0)
-- Dependencies: 218
-- Name: TABLE compra; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.compra TO clientes;


SET SESSION AUTHORIZATION 'postgres';

--
-- TOC entry 3002 (class 0 OID 0)
-- Dependencies: 220
-- Name: TABLE cuales_almacenes_administro; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.cuales_almacenes_administro TO vendedores;


SET SESSION AUTHORIZATION 'postgres';

--
-- TOC entry 3003 (class 0 OID 0)
-- Dependencies: 197
-- Name: TABLE cuenta; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.cuenta TO contador;


SET SESSION AUTHORIZATION 'postgres';

--
-- TOC entry 3004 (class 0 OID 0)
-- Dependencies: 213
-- Name: TABLE datos_personales; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.datos_personales TO samuel;
GRANT SELECT ON TABLE public.datos_personales TO clientes;


SET SESSION AUTHORIZATION 'postgres';

--
-- TOC entry 3005 (class 0 OID 0)
-- Dependencies: 214
-- Name: TABLE mi_cuenta; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.mi_cuenta TO clientes;


SET SESSION AUTHORIZATION 'postgres';

--
-- TOC entry 3006 (class 0 OID 0)
-- Dependencies: 221
-- Name: TABLE mis_almacenes; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.mis_almacenes TO vendedores;


SET SESSION AUTHORIZATION 'postgres';

--
-- TOC entry 3007 (class 0 OID 0)
-- Dependencies: 224
-- Name: TABLE mis_clientes; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.mis_clientes TO vendedores;


SET SESSION AUTHORIZATION 'postgres';

--
-- TOC entry 3008 (class 0 OID 0)
-- Dependencies: 207
-- Name: TABLE vendedor; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.vendedor TO almacenista;


SET SESSION AUTHORIZATION 'postgres';

--
-- TOC entry 3009 (class 0 OID 0)
-- Dependencies: 219
-- Name: TABLE mis_datos_vendedor; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.mis_datos_vendedor TO vendedores;


SET SESSION AUTHORIZATION 'postgres';

--
-- TOC entry 3010 (class 0 OID 0)
-- Dependencies: 206
-- Name: TABLE pedido; Type: ACL; Schema: public; Owner: postgres
--

GRANT DELETE ON TABLE public.pedido TO clientes;
GRANT SELECT ON TABLE public.pedido TO contador;


SET SESSION AUTHORIZATION 'postgres';

--
-- TOC entry 3011 (class 0 OID 0)
-- Dependencies: 206 3010
-- Name: COLUMN pedido.codigo_articulo; Type: ACL; Schema: public; Owner: postgres
--

GRANT INSERT(codigo_articulo) ON TABLE public.pedido TO clientes;


SET SESSION AUTHORIZATION 'postgres';

--
-- TOC entry 3012 (class 0 OID 0)
-- Dependencies: 206 3010
-- Name: COLUMN pedido.catidad_del_articulo; Type: ACL; Schema: public; Owner: postgres
--

GRANT INSERT(catidad_del_articulo) ON TABLE public.pedido TO clientes;


SET SESSION AUTHORIZATION 'postgres';

--
-- TOC entry 3013 (class 0 OID 0)
-- Dependencies: 216
-- Name: TABLE mis_pedidos; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.mis_pedidos TO clientes;


SET SESSION AUTHORIZATION 'postgres';

--
-- TOC entry 3014 (class 0 OID 0)
-- Dependencies: 225
-- Name: TABLE mis_ventas; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.mis_ventas TO vendedores;


SET SESSION AUTHORIZATION 'postgres';

--
-- TOC entry 3015 (class 0 OID 0)
-- Dependencies: 223
-- Name: TABLE pedido_atencion; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.pedido_atencion TO vendedores;


-- Completed on 2012-11-05 08:17:25

--
-- PostgreSQL database dump complete
--

